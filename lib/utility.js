/*--------------------------------------------------------------------------------------------------------------------*/

let _cnt = 0;

/*--------------------------------------------------------------------------------------------------------------------*/

export function buildCommandMessage(serverName, command, options)
{
	options = options || {};

	/*----------------------------------------------------------------------------------------------------------------*/

	const token = _cnt++;

	/*----------------------------------------------------------------------------------------------------------------*/

	const params = options.params || [];

	/*----------------------------------------------------------------------------------------------------------------*/

	const converter = ('converter' in options) ? (options.converter || '') : 'json';

	/*----------------------------------------------------------------------------------------------------------------*/

	command = (command || '').trim().replace(this.#paramRegExp, (x, y) => {

		return `-${y}="${String(params.shift()).replace('\\', '\\\\').replace('\n', '\\n').replace('"', '\\"').replace('\'', '\\\'')}"`;
	});

	/*----------------------------------------------------------------------------------------------------------------*/

	const topic = `ami/${serverName}/command/${converter}`;

	const message = new Message(`AMI-COMMAND<${token},"${this._uuid}","${this._username}">${command}`);

	/*----------------------------------------------------------------------------------------------------------------*/

	return {
		topic: topic,
		payload: message,
	};

	/*----------------------------------------------------------------------------------------------------------------*/
}
